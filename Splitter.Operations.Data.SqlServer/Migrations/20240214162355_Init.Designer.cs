// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Splitter.Operations.Data.SqlServer;

#nullable disable

namespace Splitter.Operations.Data.SqlServer.Migrations
{
    [DbContext(typeof(SplitterDbContext))]
    [Migration("20240214162355_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductTag", b =>
                {
                    b.Property<Guid>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("ProductTag", (string)null);
                });

            modelBuilder.Entity("Splitter.Operations.Models.EventTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FinishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventTables", (string)null);
                });

            modelBuilder.Entity("Splitter.Operations.Models.OrderTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EventTableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PaidAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EventTableId")
                        .IsUnique();

                    b.ToTable("OrderTables", (string)null);
                });

            modelBuilder.Entity("Splitter.Operations.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrderTableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderTableId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("Splitter.Operations.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags", (string)null);
                });

            modelBuilder.Entity("Splitter.Operations.Models.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderTableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderTableId");

                    b.ToTable("Vouchers", (string)null);
                });

            modelBuilder.Entity("ProductTag", b =>
                {
                    b.HasOne("Splitter.Operations.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Splitter.Operations.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Splitter.Operations.Models.OrderTable", b =>
                {
                    b.HasOne("Splitter.Operations.Models.EventTable", "EventTable")
                        .WithOne("OrderTable")
                        .HasForeignKey("Splitter.Operations.Models.OrderTable", "EventTableId");

                    b.Navigation("EventTable");
                });

            modelBuilder.Entity("Splitter.Operations.Models.Product", b =>
                {
                    b.HasOne("Splitter.Operations.Models.OrderTable", "OrderTable")
                        .WithMany("Products")
                        .HasForeignKey("OrderTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderTable");
                });

            modelBuilder.Entity("Splitter.Operations.Models.Voucher", b =>
                {
                    b.HasOne("Splitter.Operations.Models.OrderTable", "OrderTable")
                        .WithMany("Vouchers")
                        .HasForeignKey("OrderTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderTable");
                });

            modelBuilder.Entity("Splitter.Operations.Models.EventTable", b =>
                {
                    b.Navigation("OrderTable");
                });

            modelBuilder.Entity("Splitter.Operations.Models.OrderTable", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Vouchers");
                });
#pragma warning restore 612, 618
        }
    }
}
